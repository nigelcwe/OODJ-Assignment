/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import application.entities.GymSystem;
import domain.entities.Booking;
import domain.entities.Customer;
import domain.entities.Report;
import domain.entities.Staff;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ItemEvent;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;

/**
 *
 * @author chanw
 */
public class TrainerMain extends javax.swing.JFrame {
    private Staff trainer = null;
    private final GymSystem gym = new GymSystem();

    /**
     * Creates new form TrainerMain
     */
    public TrainerMain() throws Exception {
        initComponents();
    }

    public TrainerMain(Staff trainer) throws Exception {
        initComponents();
        this.trainer = trainer;
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpFilter = new javax.swing.ButtonGroup();
        panelUpcomingBookings = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookings = new javax.swing.JTable();
        panelFilters = new javax.swing.JPanel();
        cmbBookingDay = new javax.swing.JComboBox<>();
        cmbBookingMonth = new javax.swing.JComboBox<>();
        cmbBookingYear = new javax.swing.JComboBox<>();
        spinBookingHour = new javax.swing.JSpinner();
        spinBookingMinute = new javax.swing.JSpinner();
        rbtnDate = new javax.swing.JRadioButton();
        rbtnStartTime = new javax.swing.JRadioButton();
        btnReset = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        panelBookingCompletion = new javax.swing.JPanel();
        btnCompleteBooking = new javax.swing.JButton();
        cboPaid = new javax.swing.JCheckBox();
        txtFeedback = new javax.swing.JTextField();
        panelNavigation = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        btnEditProfile = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        lblTrainerName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trainer Home");
        setResizable(false);

        panelUpcomingBookings.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Upcoming Bookings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI Historic", 0, 12))); // NOI18N

        tblBookings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Customer Name", "Date", "Start Time", "End Time", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBookings.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblBookings);

        panelFilters.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filter by:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI Historic", 0, 12))); // NOI18N

        cmbBookingDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbBookingMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        cmbBookingYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2022" }));

        spinBookingHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));
        spinBookingHour.setEnabled(false);

        spinBookingMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 50, 10));
        spinBookingMinute.setEnabled(false);

        btnGrpFilter.add(rbtnDate);
        rbtnDate.setSelected(true);
        rbtnDate.setText("Date:");
        rbtnDate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnDateItemStateChanged(evt);
            }
        });

        btnGrpFilter.add(rbtnStartTime);
        rbtnStartTime.setText("Start Time:");
        rbtnStartTime.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnStartTimeItemStateChanged(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFiltersLayout = new javax.swing.GroupLayout(panelFilters);
        panelFilters.setLayout(panelFiltersLayout);
        panelFiltersLayout.setHorizontalGroup(
            panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelFiltersLayout.createSequentialGroup()
                        .addComponent(cmbBookingDay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBookingMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBookingYear, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltersLayout.createSequentialGroup()
                        .addComponent(spinBookingHour, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinBookingMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelFiltersLayout.setVerticalGroup(
            panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbBookingDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbBookingMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbBookingYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbtnDate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spinBookingHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spinBookingMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbtnStartTime))
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelUpcomingBookingsLayout = new javax.swing.GroupLayout(panelUpcomingBookings);
        panelUpcomingBookings.setLayout(panelUpcomingBookingsLayout);
        panelUpcomingBookingsLayout.setHorizontalGroup(
            panelUpcomingBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpcomingBookingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUpcomingBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addComponent(panelFilters, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelUpcomingBookingsLayout.setVerticalGroup(
            panelUpcomingBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpcomingBookingsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelBookingCompletion.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Booking Completion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI Historic", 0, 12))); // NOI18N

        btnCompleteBooking.setText("Complete Booking");
        btnCompleteBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteBookingActionPerformed(evt);
            }
        });

        cboPaid.setText("Paid ?");

        txtFeedback.setText("Feedback");

        javax.swing.GroupLayout panelBookingCompletionLayout = new javax.swing.GroupLayout(panelBookingCompletion);
        panelBookingCompletion.setLayout(panelBookingCompletionLayout);
        panelBookingCompletionLayout.setHorizontalGroup(
            panelBookingCompletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBookingCompletionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBookingCompletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCompleteBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboPaid))
                .addContainerGap())
        );
        panelBookingCompletionLayout.setVerticalGroup(
            panelBookingCompletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBookingCompletionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBookingCompletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFeedback)
                    .addGroup(panelBookingCompletionLayout.createSequentialGroup()
                        .addComponent(cboPaid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCompleteBooking, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelNavigation.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Navigation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI Historic", 0, 12))); // NOI18N

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnEditProfile.setText("Edit Profile");
        btnEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelNavigationLayout = new javax.swing.GroupLayout(panelNavigation);
        panelNavigation.setLayout(panelNavigationLayout);
        panelNavigationLayout.setHorizontalGroup(
            panelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNavigationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelNavigationLayout.setVerticalGroup(
            panelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNavigationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEditProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lblWelcome.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblWelcome.setText("Welcome back,");

        lblTrainerName.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        lblTrainerName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelUpcomingBookings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelBookingCompletion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelNavigation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTrainerName, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(lblTrainerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelUpcomingBookings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelNavigation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBookingCompletion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnDateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnDateItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cmbBookingDay.setEnabled(true);
            cmbBookingMonth.setEnabled(true);
            cmbBookingYear.setEnabled(true);
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            cmbBookingDay.setEnabled(false);
            cmbBookingMonth.setEnabled(false);
            cmbBookingYear.setEnabled(false);
        }
    }//GEN-LAST:event_rbtnDateItemStateChanged

    private void rbtnStartTimeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnStartTimeItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            spinBookingHour.setEnabled(true);
            spinBookingMinute.setEnabled(true);
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            spinBookingHour.setEnabled(false);
            spinBookingMinute.setEnabled(false);
        }
    }//GEN-LAST:event_rbtnStartTimeItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) tblBookings.getModel();
        ArrayList<String[]> filteredIncompleteBooking = new ArrayList<>();
        try {
            ArrayList<String[]> allIncompleteBooking = gym.getBooking().getIncomplete();
            if (rbtnDate.isSelected()) {
                LocalDate filterDate = LocalDate.of(
                        Integer.parseInt(cmbBookingYear.getSelectedItem().toString()),
                        cmbBookingMonth.getSelectedIndex(),
                        cmbBookingDay.getSelectedIndex()
                );
                for (String[] i : allIncompleteBooking) {
                    Booking bookingI = gym.getBooking().getBooking(i);
                    if (bookingI.getStartTime().toLocalDate().equals(filterDate)) filteredIncompleteBooking.add(i);
                }
            } else if (rbtnStartTime.isSelected()) {
                LocalTime filterTime = LocalTime.of(
                        Integer.parseInt(spinBookingHour.getValue().toString()),
                        Integer.parseInt(spinBookingMinute.getValue().toString())
                );
                for (String[] i : allIncompleteBooking) {
                    Booking bookingI = gym.getBooking().getBooking(i);
                    if (bookingI.getStartTime().toLocalTime().equals(filterTime)) filteredIncompleteBooking.add(i);
                }
            }

            clear();
            for (String[] i : filteredIncompleteBooking) {
                Booking bookingI = gym.getBooking().getBooking(i);
                if (bookingI.getTrainerId() != this.trainer.getId()) continue;
                Customer customerI = gym.getCustomer().getById(Integer.parseInt(i[1]));
                String[] row = {
                        i[0],
                        customerI.getFullName(),
                        bookingI.getStartTime().toLocalDate().toString(),
                        bookingI.getStartTime().toLocalTime().toString(),
                        bookingI.getEndTime().toLocalTime().toString(),
                        String.valueOf(bookingI.isPaid())
                };
                tblModel.addRow(row);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCompleteBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteBookingActionPerformed
        // TODO add your handling code here:
        try {
            if (tblBookings.getSelectedRow() == -1) throw new Exception("Please select a booking to complete!");
            if (!cboPaid.isSelected()) throw new Exception("Bookings must be paid to be completed!");
            int validation = gym.getStaff().validation(txtFeedback.getText());
            if (validation == 1) throw new Exception("Your feedback contains invalid characters. Please try again!");

            int bookingId = Integer.parseInt(tblBookings.getValueAt(tblBookings.getSelectedRow(), 0).toString());
            Booking booking = gym.getBooking().getById(bookingId);
            booking.setPaid(true);
            booking.setCompleted(true);
            if (txtFeedback.getText().equals("") || txtFeedback.getText().equals("Feedback") || txtFeedback.getText().contains("Feedback")) booking.setFeedback("null");
            else booking.setFeedback(txtFeedback.getText());

            int status = gym.getBooking().modifyBooking(booking);
            if (status == 1) throw new Exception("Session was not completed.");

            Customer customer = gym.getCustomer().getById(booking.getCustomerId());
            customer.setBookingId(-1);
            gym.getCustomer().modifyCustomer(customer);

            Report report = new Report(
                    gym.getReport().generateId(),
                    customer.getId(),
                    trainer.getId(),
                    booking.getPrice(),
                    LocalDateTime.now()
            );
            gym.getReport().createReport(report);
            refresh();
            JOptionPane.showMessageDialog(null, "Booking successfully completed!", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCompleteBookingActionPerformed

    private void btnEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditProfileActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        try {
            this.setVisible(false);
            new LoginFrame().setVisible(true);
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnLogOutActionPerformed

    private void clear() {
        DefaultTableModel tblModel = (DefaultTableModel) tblBookings.getModel();

        try {
            while (tblModel.getRowCount() > 0) {
                tblModel.removeRow(0);
            }

            if (cmbBookingYear.getItemCount() > 2) {
                cmbBookingYear.removeAllItems();
                cmbBookingYear.addItem("Year");
                cmbBookingYear.addItem("2022");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void refresh() {
        try {
            DefaultTableModel tblModel = (DefaultTableModel) tblBookings.getModel();
            DefaultComboBoxModel cmbBookingYearModel = (DefaultComboBoxModel) cmbBookingYear.getModel();
            ArrayList<String[]> allIncompleteBooking = gym.getBooking().getIncomplete();

            clear();

            lblTrainerName.setText(this.trainer.getFullName());
            
            for (String[] i : allIncompleteBooking) {
                Booking bookingI = gym.getBooking().getBooking(i);
                if (bookingI.getTrainerId() != this.trainer.getId()) continue;
                Customer customerI = gym.getCustomer().getById(Integer.parseInt(i[1]));
                String[] row = {
                        i[0],
                        customerI.getFullName(),
                        bookingI.getStartTime().toLocalDate().toString(),
                        bookingI.getStartTime().toLocalTime().toString(),
                        bookingI.getEndTime().toLocalTime().toString(),
                        String.valueOf(bookingI.isPaid())
                };
                tblModel.addRow(row);
            }

            ArrayList<Integer> bookingYear = new ArrayList<>();
            for (String[] l : allIncompleteBooking) {
                Booking bookingL = gym.getBooking().getBooking(l);
                if (bookingL.getStartTime().getYear() == Integer.parseInt(cmbBookingYearModel.getElementAt(1).toString()))
                    continue;
                if ((bookingYear.size() == 0) || (bookingYear.get(bookingYear.size() - 1) != bookingL.getStartTime().getYear())) {
                    bookingYear.add(bookingL.getStartTime().getYear());
                }
            }
            cmbBookingYearModel.addAll(bookingYear);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrainerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrainerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrainerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrainerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TrainerMain().setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompleteBooking;
    private javax.swing.JButton btnEditProfile;
    private javax.swing.ButtonGroup btnGrpFilter;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox cboPaid;
    private javax.swing.JComboBox<String> cmbBookingDay;
    private javax.swing.JComboBox<String> cmbBookingMonth;
    private javax.swing.JComboBox<String> cmbBookingYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTrainerName;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPanel panelBookingCompletion;
    private javax.swing.JPanel panelFilters;
    private javax.swing.JPanel panelNavigation;
    private javax.swing.JPanel panelUpcomingBookings;
    private javax.swing.JRadioButton rbtnDate;
    private javax.swing.JRadioButton rbtnStartTime;
    private javax.swing.JSpinner spinBookingHour;
    private javax.swing.JSpinner spinBookingMinute;
    private javax.swing.JTable tblBookings;
    private javax.swing.JTextField txtFeedback;
    // End of variables declaration//GEN-END:variables
}
